@model List<GtclTaskProject.Models.HrmEmployeeViewModel>

<div class="card h-auto mb-2 overflow-auto">
    <div class="card-body">
        @* <h3>Search</h3> *@
        <div class="mb-3">
            <input type="text" id="employee-search" class="form-control" placeholder="Search">
        </div>
        <div class="table-responsive">
            <table class="table table-bordered" id="employee-table">
                <thead>
                    <tr >
                        <th class="bg-info">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="select-all">
                                <label class="form-check-label" for="select-all">Select</label>
                            </div>
                        </th>
                        <th class="bg-info">Emp.ID</th>
                        <th class="bg-info">Name</th>
                        <th class="bg-info">Designation</th>
                    </tr>
                </thead>
                <tbody id="employee-tbody">
                    @foreach (var item in Model)
                    {
                        <tr class="employee-row">
                            <td>
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input employee-checkbox" name="selectedEmployeeIds" value="@item.EmployeeID.PadLeft(8, '0')">
                                    <label class="form-check-label"></label>
                                </div>
                            </td>
                            <td class="emp-id">@item.EmployeeID</td>
                            <td class="emp-name">@item.Name</td>
                            <td class="emp-designation">@item.DesignationCode</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="mt-2" id="table-info">
            Showing 1 to @Model.Count of @Model.Count entries
        </div>
    </div>
</div>

<style>
    .table-responsive {
        overflow-x: auto;
    }

    .table-bordered th,
    .table-bordered td {
        border: 1px solid #dee2e6;
    }

    th:nth-child(1),
    td:nth-child(1) {
        width: 50px;
    }

    th:nth-child(2),
    td:nth-child(2) {
        width: 100px;
    }

    th:nth-child(3),
    td:nth-child(3) {
        width: 200px;
    }

    th:nth-child(4),
    td:nth-child(4) {
        width: 150px;
    }

    /* Add this for hiding rows */
    .hidden-row {
        display: none;
    }

    /* Fixed Height for table */
    #employee-table {
        display: block;
        max-height: 500px;
        overflow-y: scroll;
    }

    #employee-tbody {
        display: table-row-group;
    }
</style>

<script>
    $(document).ready(function () {
        console.log("Partial view document ready, initializing search...");

        // Select All Checkbox functionality
        $('#select-all').on('click', function () {
            console.log("Select all clicked: " + this.checked);
            $('.employee-checkbox:visible').prop('checked', this.checked);
        });

        // Individually select functionality
        $(document).on('click', '.employee-checkbox', function () {
            var visibleCheckboxes = $('.employee-checkbox:not(:hidden)');
            var checkedVisibleCheckboxes = $('.employee-checkbox:not(:hidden):checked');

            if (visibleCheckboxes.length === checkedVisibleCheckboxes.length && visibleCheckboxes.length > 0) {
                $('#select-all').prop('checked', true);
            } else {
                $('#select-all').prop('checked', false);
            }
            console.log("Individual checkbox clicked");
        });

        // Enhanced Search Functionality
        $('#employee-search').on('keyup', function () {
            var searchText = $(this).val().toLowerCase().trim();
            console.log("Search text: " + searchText);

            var visibleCount = 0;
            var totalRows = $('.employee-row').length;

            // Loop through rows and filter
            $('.employee-row').each(function () {
                var row = $(this);
                var empId = row.find('.emp-id').text().toLowerCase();
                var name = row.find('.emp-name').text().toLowerCase();
                var designation = row.find('.emp-designation').text().toLowerCase();

                // Check if any field contains the search text
                if (searchText === '' ||
                    empId.includes(searchText) ||
                    name.includes(searchText) ||
                    designation.includes(searchText)) {
                    row.removeClass('hidden-row');
                    visibleCount++;
                } else {
                    row.addClass('hidden-row');
                }
            });

            // Update the info text
            if (searchText === '') {
                $('#table-info').text('Showing 1 to ' + totalRows + ' of ' + totalRows + ' entries');
            } else {
                $('#table-info').text('Showing ' + visibleCount + ' matching entries (filtered from ' + totalRows + ' total entries)');
            }

            // Update select-all checkbox state
            var visibleCheckboxes = $('.employee-checkbox:not(:hidden)');
            var checkedVisibleCheckboxes = $('.employee-checkbox:not(:hidden):checked');

            if (visibleCheckboxes.length === checkedVisibleCheckboxes.length && visibleCheckboxes.length > 0) {
                $('#select-all').prop('checked', true);
            } else {
                $('#select-all').prop('checked', false);
            }
        });

        // Trigger a keyup event on page load to initialize the table
        $('#employee-search').trigger('keyup');
        console.log("Initial keyup event triggered");
    });
</script>
